---
# tasks file for ansible-rpi_wifi_ap

# dependencies
- name: "[main] Import dependencies installation tasks"
  import_tasks: dependencies.yml
  tags: rpi_wifi_ap

# Network
- name: "[main] /etc/network/interfaces: Find and comment all lines containing {{ rpi_wifi_ap_WLAN }}"
  replace:
    path: /etc/network/interfaces
    regexp: '(^[^#\n].*{{ rpi_wifi_ap_WLAN }}.*$)'
    replace: '#\1'
    before: 'iface default.*'
  notify:
  - '[rpi_wifi_ap] Reload systemd daemon'
  - '[rpi_wifi_ap] Restart networking service'
  - '[rpi_wifi_ap] Reboot the host'
  - '[rpi_wifi_ap] Notify if the networking or isc-dhcp-server service restart failed'
  become: yes
  tags: rpi_wifi_ap

- name: "[main] /etc/network/interfaces: Find and comment all {{ rpi_wifi_ap_WLAN }}-related settings"
  replace:
    path: /etc/network/interfaces
    regexp: '^(\s.+$)'
    replace: '#\1'
    # ATTENTION! before and after work wrong way around and this issue is still open on github.
    before: '#iface {{ rpi_wifi_ap_WLAN }} inet manual\n'
    after: 'iface default inet dhcp'
  notify:
  - '[rpi_wifi_ap] Reload systemd daemon'
  - '[rpi_wifi_ap] Restart networking service'
  - '[rpi_wifi_ap] Reboot the host'
  - '[rpi_wifi_ap] Notify if the networking or isc-dhcp-server service restart failed'
  become: yes
  tags: rpi_wifi_ap

- name: "[main] Configure {{ rpi_wifi_ap_WLAN }} (ip: {{ rpi_wifi_ap_WLAN_ip }}; netmask: {{ rpi_wifi_ap_WLAN_netmask }})
        in /etc/network/interfaces"
  blockinfile:
    marker: '#{mark} Added by drew1kun.rpi_wifi_ap asnible role'
    path: /etc/network/interfaces
    block: |
      auto {{ rpi_wifi_ap_WLAN }}
      iface {{ rpi_wifi_ap_WLAN }} inet static
        address {{ rpi_wifi_ap_WLAN_ip }}
        netmask {{ rpi_wifi_ap_WLAN_netmask }}
  notify:
  - '[rpi_wifi_ap] Reload systemd daemon'
  - '[rpi_wifi_ap] Restart networking service'
  - '[rpi_wifi_ap] Reboot the host'
  - '[rpi_wifi_ap] Notify if the networking or isc-dhcp-server service restart failed'
  become: yes
  tags: rpi_wifi_ap

- name: "[main] Turn on ip forwarding on in /proc and in the sysctl file and reload if necessary"
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    sysctl_set: yes
    state: present
    reload: yes
  become: yes
  tags: rpi_wifi_ap

# DHCP
- name: "[main] Generate /etc/dhcp/dhcpd.conf"
  template:
    src: dhcpd.conf.j2
    dest: /etc/dhcp/dhcpd.conf
    owner: root
    group: root
    mode: 0644
    backup: yes
  become: yes
  notify:
  - '[rpi_wifi_ap] Restart dhcp daemon'
  - '[rpi_wifi_ap] Reboot the host'
  - '[rpi_wifi_ap] Notify if the networking or isc-dhcp-server service restart failed'
  tags: rpi_wifi_ap

- name: "[main] Specify 'INTERFACESv4|6={{ rpi_wifi_ap_WLAN }}' in /etc/default/isc-dhcp-server"
  replace:
    path: /etc/default/isc-dhcp-server
    regexp: '^(INTERFACESv[46]=)".*"'
    replace: '\1"{{ rpi_wifi_ap_WLAN }}"'
  become: yes
  notify:
  - '[rpi_wifi_ap] Restart dhcp daemon'
  - '[rpi_wifi_ap] Reboot the host'
  - '[rpi_wifi_ap] Notify if the networking or isc-dhcp-server service restart failed'
  tags: rpi_wifi_ap

- name: "[main] Disable 'INTERFACESv6' in /etc/default/isc-dhcp-server if IPv6 is not configured"
  replace:
    path: /etc/default/isc-dhcp-server
    regexp: '^(INTERFACESv6=".*")'
    replace: '#\1'
  become: yes
  notify:
  - '[rpi_wifi_ap] Restart dhcp daemon'
  - '[rpi_wifi_ap] Reboot the host'
  - '[rpi_wifi_ap] Notify if the networking or isc-dhcp-server service restart failed'
  when: not rpi_wifi_ap_ipv6
  tags: rpi_wifi_ap

# HostAPd
- name: "[main] Generate /etc/hostapd/hostapd.conf"
  template:
    src: hostapd.conf.j2
    dest: /etc/hostapd/hostapd.conf
    owner: root
    group: root
    mode: 0644
  become: yes
  notify: '[rpi_wifi_ap] Restart hostapd daemon'
  tags: rpi_wifi_ap

- name: "[main] Add 'DAEMON_CONF=/etc/hostapd/hostapd.conf' to /etc/default/hostapd"
  lineinfile:
    path: /etc/default/hostapd
    regexp: 'DAEMON_CONF=\".*"'
    line: 'DAEMON_CONF="/etc/hostapd/hostapd.conf"'
    state: present
  become: yes
  notify: '[rpi_wifi_ap] Restart hostapd daemon'
  tags: rpi_wifi_ap

- meta: flush_handlers
  tags: rpi_wifi_ap

# IPTables (tasks/iptables.yml)
- name: "[main] Import tasks from iptables.yml"
  import_tasks: iptables.yml
  tags: rpi_wifi_ap

- name: "[main] Access Point ESSID"
  debug:
    msg:
    - "Configuration is done"
    - "the Access Point name: {{ rpi_wifi_ap_essid }}"
  tags: rpi_wifi_ap
